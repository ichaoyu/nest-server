{"version":3,"sources":["../../../../src/modules/monitor/oper-log/oper-log.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { EXCEL_SERVICE, ExcelService } from '@/shared/excel';\nimport { Between, Like, Repository } from 'typeorm';\n\nimport { SysOperLogEntity } from '@/database';\nimport { DelDTO } from '@/models';\n\nimport { FindOperLogPageDTO } from './oper-log.dto';\nimport { OperLogExportSerialize } from './oper-log.serialize';\n\n@Injectable()\nexport class OperLogService {\n  constructor(\n    @Inject(EXCEL_SERVICE)\n    private excelService: ExcelService,\n    @InjectRepository(SysOperLogEntity)\n    private operLogModel: Repository<SysOperLogEntity>,\n  ) {}\n\n  async handleFindPage(dto: FindOperLogPageDTO) {\n    const {\n      pageNum,\n      pageSize,\n      beginDate,\n      endDate,\n      operIp,\n      operName,\n      title,\n      ...where\n    } = dto;\n\n    const [list, total] = await this.operLogModel.findAndCount({\n      where: {\n        ...where,\n        title: title ? Like(`%${title}%`) : null,\n        operIp: operIp ? Like(`%${operIp}%`) : null,\n        operName: operName ? Like(`%${operName}%`) : null,\n        operTime: beginDate ? Between(beginDate, endDate) : null,\n      },\n      order: {\n        operTime: 'DESC',\n      },\n      take: pageSize,\n      skip: (pageNum - 1) * pageSize,\n    });\n\n    return {\n      pageNum,\n      pageSize,\n      total,\n      list,\n    };\n  }\n\n  async handleExportPage(dto: FindOperLogPageDTO) {\n    const { list } = await this.handleFindPage(dto);\n    return await this.excelService.handleExport({\n      sheetName: '操作日志',\n      fileName: '操作日志报表',\n      Cls: OperLogExportSerialize,\n      data: list,\n    });\n  }\n\n  async handleDeleteMany(dto: DelDTO) {\n    const { ids } = dto;\n\n    await this.operLogModel.delete(ids);\n  }\n\n  async handleClear() {\n    await this.operLogModel.clear();\n  }\n}\n"],"names":["OperLogService","handleFindPage","dto","pageNum","pageSize","beginDate","endDate","operIp","operName","title","where","list","total","operLogModel","findAndCount","Like","operTime","Between","order","take","skip","handleExportPage","excelService","handleExport","sheetName","fileName","Cls","OperLogExportSerialize","data","handleDeleteMany","ids","delete","handleClear","clear","constructor","Injectable","Inject","EXCEL_SERVICE","InjectRepository","SysOperLogEntity"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAYaA;;;eAAAA;;;wBAZsB;yBACF;uBACW;0BACF;0BAET;kCAIM;;;;;;;;;;;;;;;AAGhC,IAAA,AAAMA,iBAAN,MAAMA;IAQX,MAAMC,eAAeC,GAAuB,EAAE;QAC5C,MAAM,EACJC,OAAO,EACPC,QAAQ,EACRC,SAAS,EACTC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,KAAK,EACL,GAAGC,OACJ,GAAGR;QAEJ,MAAM,CAACS,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,YAAY,CAACC,YAAY,CAAC;YACzDJ,OAAO;gBACL,GAAGA,KAAK;gBACRD,OAAOA,QAAQM,IAAAA,cAAI,EAAC,CAAC,CAAC,EAAEN,MAAM,CAAC,CAAC,IAAI;gBACpCF,QAAQA,SAASQ,IAAAA,cAAI,EAAC,CAAC,CAAC,EAAER,OAAO,CAAC,CAAC,IAAI;gBACvCC,UAAUA,WAAWO,IAAAA,cAAI,EAAC,CAAC,CAAC,EAAEP,SAAS,CAAC,CAAC,IAAI;gBAC7CQ,UAAUX,YAAYY,IAAAA,iBAAO,EAACZ,WAAWC,WAAW;YACtD;YACAY,OAAO;gBACLF,UAAU;YACZ;YACAG,MAAMf;YACNgB,MAAM,AAACjB,CAAAA,UAAU,CAAA,IAAKC;QACxB;QAEA,OAAO;YACLD;YACAC;YACAQ;YACAD;QACF;IACF;IAEA,MAAMU,iBAAiBnB,GAAuB,EAAE;QAC9C,MAAM,EAAES,IAAI,EAAE,GAAG,MAAM,IAAI,CAACV,cAAc,CAACC;QAC3C,OAAO,MAAM,IAAI,CAACoB,YAAY,CAACC,YAAY,CAAC;YAC1CC,WAAW;YACXC,UAAU;YACVC,KAAKC,wCAAsB;YAC3BC,MAAMjB;QACR;IACF;IAEA,MAAMkB,iBAAiB3B,GAAW,EAAE;QAClC,MAAM,EAAE4B,GAAG,EAAE,GAAG5B;QAEhB,MAAM,IAAI,CAACW,YAAY,CAACkB,MAAM,CAACD;IACjC;IAEA,MAAME,cAAc;QAClB,MAAM,IAAI,CAACnB,YAAY,CAACoB,KAAK;IAC/B;IA5DAC,YACE,AACQZ,YAA0B,EAClC,AACQT,YAA0C,CAClD;aAHQS,eAAAA;aAEAT,eAAAA;IACP;AAwDL;AA9Dab;IADZmC,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,oBAAa;IAEpBC,aAAAA,IAAAA,yBAAgB,EAACC,0BAAgB;;;eADZ,mBAAY,4BAAZ,mBAAY;eAEZ,oBAAU,4BAAV,oBAAU;;GALvBvC"}