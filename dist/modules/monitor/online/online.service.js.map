{"version":3,"sources":["../../../../src/modules/monitor/online/online.service.ts"],"sourcesContent":["import { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\nimport { ICacheManager, IOnlineInfo } from '@/interfaces';\nimport { SharedService } from '@/shared';\nimport { CacheUtil, TransformUtil } from '@/utils';\n\nimport { FindOnlinePageDTO } from './online.dto';\n\n@Injectable()\nexport class OnlineService {\n  constructor(\n    @Inject(CACHE_MANAGER)\n    private cacheManager: ICacheManager,\n    private configService: ConfigService,\n    private sharedService: SharedService,\n  ) {}\n\n  async handleFindPage(dto: FindOnlinePageDTO) {\n    const { userName, pageNum, pageSize } = dto;\n    const prefix = this.configService.get<string>('cache.keyPrefix') || '';\n    const tokenKey = CacheUtil.getTokenKey('*');\n    const keys = await this.cacheManager.store.keys(`${prefix}${tokenKey}`);\n    const keysPage = TransformUtil.arrToPage(keys, pageNum, pageSize);\n    const list = [] as IOnlineInfo[];\n\n    if (keysPage) {\n      for (let key of keysPage) {\n        key = key.replace(prefix, '');\n        const item = await this.cacheManager.get<IOnlineInfo>(key);\n\n        if (userName) {\n          if (item.userName === userName) {\n            list.push(item);\n          }\n        } else {\n          list.push(item);\n        }\n      }\n    }\n\n    return {\n      pageNum,\n      pageSize,\n      total: keys.length,\n      list,\n    };\n  }\n\n  async handleOffline(id: string) {\n    const isSoloLogin = await this.sharedService.isSoloLogin();\n    const tokenKey = CacheUtil.getTokenKey(id);\n\n    if (isSoloLogin) {\n      const { userId } = await this.cacheManager.get<IOnlineInfo>(tokenKey);\n\n      const userKey = CacheUtil.getUserKey(userId);\n\n      await this.cacheManager.del(userKey);\n    }\n\n    await this.cacheManager.del(tokenKey);\n  }\n}\n"],"names":["OnlineService","handleFindPage","dto","userName","pageNum","pageSize","prefix","configService","get","tokenKey","CacheUtil","getTokenKey","keys","cacheManager","store","keysPage","TransformUtil","arrToPage","list","key","replace","item","push","total","length","handleOffline","id","isSoloLogin","sharedService","userId","userKey","getUserKey","del","constructor","Injectable","Inject","CACHE_MANAGER"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAWaA;;;eAAAA;;;8BAXiB;wBACK;wBACL;4BAEa;wBACb;uBACW;;;;;;;;;;;;;;;AAKlC,IAAA,AAAMA,gBAAN,MAAMA;IAQX,MAAMC,eAAeC,GAAsB,EAAE;QAC3C,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAE,GAAGH;QACxC,MAAMI,SAAS,IAAI,CAACC,aAAa,CAACC,GAAG,CAAS,sBAAsB;QACpE,MAAMC,WAAWC,gBAAS,CAACC,WAAW,CAAC;QACvC,MAAMC,OAAO,MAAM,IAAI,CAACC,YAAY,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC,EAAEN,OAAO,EAAEG,SAAS,CAAC;QACtE,MAAMM,WAAWC,oBAAa,CAACC,SAAS,CAACL,MAAMR,SAASC;QACxD,MAAMa,OAAO,EAAE;QAEf,IAAIH,UAAU;YACZ,KAAK,IAAII,OAAOJ,SAAU;gBACxBI,MAAMA,IAAIC,OAAO,CAACd,QAAQ;gBAC1B,MAAMe,OAAO,MAAM,IAAI,CAACR,YAAY,CAACL,GAAG,CAAcW;gBAEtD,IAAIhB,UAAU;oBACZ,IAAIkB,KAAKlB,QAAQ,KAAKA,UAAU;wBAC9Be,KAAKI,IAAI,CAACD;oBACZ;gBACF,OAAO;oBACLH,KAAKI,IAAI,CAACD;gBACZ;YACF;QACF;QAEA,OAAO;YACLjB;YACAC;YACAkB,OAAOX,KAAKY,MAAM;YAClBN;QACF;IACF;IAEA,MAAMO,cAAcC,EAAU,EAAE;QAC9B,MAAMC,cAAc,MAAM,IAAI,CAACC,aAAa,CAACD,WAAW;QACxD,MAAMlB,WAAWC,gBAAS,CAACC,WAAW,CAACe;QAEvC,IAAIC,aAAa;YACf,MAAM,EAAEE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAChB,YAAY,CAACL,GAAG,CAAcC;YAE5D,MAAMqB,UAAUpB,gBAAS,CAACqB,UAAU,CAACF;YAErC,MAAM,IAAI,CAAChB,YAAY,CAACmB,GAAG,CAACF;QAC9B;QAEA,MAAM,IAAI,CAACjB,YAAY,CAACmB,GAAG,CAACvB;IAC9B;IAnDAwB,YACE,AACQpB,YAA2B,EACnC,AAAQN,aAA4B,EACpC,AAAQqB,aAA4B,CACpC;aAHQf,eAAAA;aACAN,gBAAAA;aACAqB,gBAAAA;IACP;AA+CL;AArDa5B;IADZkC,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,2BAAa;;;eACC,yBAAa,4BAAb,yBAAa;eACZ,qBAAa,4BAAb,qBAAa;eACb,qBAAa,4BAAb,qBAAa;;GAL3BpC"}