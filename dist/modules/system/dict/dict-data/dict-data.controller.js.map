{"version":3,"sources":["../../../../../src/modules/system/dict/dict-data/dict-data.controller.ts"],"sourcesContent":["import { CacheKey, CacheTTL } from '@nestjs/cache-manager';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Post,\n  Put,\n  Query,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiOkResponse,\n  ApiOperation,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\n\nimport { CACHES, ENTITY_BIZ_TYPE } from '@/constants';\nimport { OperLog, Permission } from '@/decorators';\nimport { DelDTO, ExportResultVO } from '@/models';\n\nimport {\n  CreateDictDataDTO,\n  FindDictDataPageDTO,\n  UpdateDictDataDTO,\n} from './dict-data.dto';\nimport { DictDataService } from './dict-data.service';\nimport { FindDictDataPageVO, GetDictDataListVO } from './dict-data.vo';\n\n@ApiTags('字典数据接口')\n@ApiBearerAuth()\n@Controller('/system/dict/data')\nexport class DictDataController {\n  constructor(private dictDataService: DictDataService) {}\n\n  @ApiOperation({ summary: '获取字典数据分页' })\n  @ApiOkResponse({ type: FindDictDataPageVO })\n  @Permission('system:dict:list')\n  @Post('/page')\n  async findPage(@Body() dto: FindDictDataPageDTO) {\n    return await this.dictDataService.handleFindPage(dto);\n  }\n\n  @ApiOperation({ summary: '获取字典数据列表' })\n  @ApiOkResponse({ type: GetDictDataListVO })\n  @ApiQuery({ name: 'dictType', description: '字典类型' })\n  @Permission('system:dict:list')\n  @CacheKey(CACHES.SYS_DICT_KEY)\n  @CacheTTL(15 * 1000)\n  @Get('/list')\n  async getList(@Query('dictType') dictType: string) {\n    return await this.dictDataService.handleGetList(dictType);\n  }\n\n  @ApiOperation({ summary: '新增字典数据' })\n  @OperLog({ title: '字典数据', bizType: ENTITY_BIZ_TYPE.INSERT })\n  @Permission('system:dict:add')\n  @Post('/create')\n  async create(@Body() dto: CreateDictDataDTO) {\n    await this.dictDataService.handleCreate(dto);\n  }\n\n  @ApiOperation({ summary: '更新字典数据' })\n  @ApiQuery({ name: 'id', description: '主键' })\n  @OperLog({ title: '字典数据', bizType: ENTITY_BIZ_TYPE.UPDATE })\n  @Permission('system:dict:edit')\n  @Put('/update')\n  async update(@Query('id') id: string, @Body() dto: UpdateDictDataDTO) {\n    await this.dictDataService.handleUpdate(id, dto);\n  }\n\n  @ApiOperation({ summary: '删除字典数据' })\n  @OperLog({ title: '字典数据', bizType: ENTITY_BIZ_TYPE.DELETE })\n  @Permission('system:dict:remove')\n  @Delete('/delete')\n  async deleteMany(@Body() dto: DelDTO) {\n    await this.dictDataService.handleDeleteMany(dto);\n  }\n\n  @ApiOperation({ summary: '导出字典数据分页' })\n  @ApiOkResponse({ type: ExportResultVO })\n  @OperLog({ title: '字典数据', bizType: ENTITY_BIZ_TYPE.EXPORT })\n  @Permission('system:dict:export')\n  @Post('/export')\n  async exportPage(@Body() dto: FindDictDataPageDTO) {\n    return await this.dictDataService.handleExportPage(dto);\n  }\n}\n"],"names":["DictDataController","findPage","dto","dictDataService","handleFindPage","getList","dictType","handleGetList","create","handleCreate","update","id","handleUpdate","deleteMany","handleDeleteMany","exportPage","handleExportPage","constructor","ApiOperation","summary","ApiOkResponse","type","FindDictDataPageVO","Permission","Post","Body","GetDictDataListVO","ApiQuery","name","description","CacheKey","CACHES","SYS_DICT_KEY","CacheTTL","Get","Query","OperLog","title","bizType","ENTITY_BIZ_TYPE","INSERT","UPDATE","Put","DELETE","Delete","ExportResultVO","EXPORT","ApiTags","ApiBearerAuth","Controller"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}