{"version":3,"sources":["../../../../src/modules/system/role/role.service.ts"],"sourcesContent":["import { BadRequestException, Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { EXCEL_SERVICE, ExcelService } from '@/shared/excel';\nimport { Between, In, Not, Repository } from 'typeorm';\n\nimport { ENTITY_DEL_FLAG, ENTITY_STATUS, MESSAGES } from '@/constants';\nimport { SysMenuEntity, SysRoleEntity, SysUserEntity } from '@/database';\nimport { DelDTO } from '@/models';\nimport { ContextService } from '@/shared';\n\nimport {\n  AllocateDTO,\n  CreateRoleDTO,\n  FindAllocatedPageDTO,\n  FindRolePageDTO,\n  FindUnallocatedPageDTO,\n  UpdateRoleDTO,\n} from './role.dto';\nimport { RoleExportSerialize } from './role.serialize';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @Inject(EXCEL_SERVICE)\n    private excelService: ExcelService,\n    @InjectRepository(SysMenuEntity)\n    private menuModel: Repository<SysMenuEntity>,\n    @InjectRepository(SysRoleEntity)\n    private roleModel: Repository<SysRoleEntity>,\n    @InjectRepository(SysUserEntity)\n    private userModel: Repository<SysUserEntity>,\n    private contextService: ContextService,\n  ) {}\n\n  async handleFindPage(dto: FindRolePageDTO) {\n    const { pageNum, pageSize, beginDate, endDate, ...where } = dto;\n\n    const [list, total] = await this.roleModel.findAndCount({\n      relations: {\n        menus: true,\n      },\n      select: {\n        menus: {\n          id: true,\n        },\n      },\n      where: {\n        delFlag: ENTITY_DEL_FLAG.EXIST,\n        createTime: beginDate ? Between(beginDate, endDate) : null,\n        ...where,\n      },\n      order: {\n        roleSort: 'ASC',\n      },\n      take: pageSize,\n      skip: (pageNum - 1) * pageSize,\n    });\n\n    return {\n      pageNum,\n      pageSize,\n      total,\n      list,\n    };\n  }\n\n  async handleFindAllocatedPage(id: string, dto: FindAllocatedPageDTO) {\n    const { pageNum, pageSize, ...where } = dto;\n\n    const [list, total] = await this.userModel.findAndCount({\n      relations: { roles: true },\n      where: {\n        roles: { id: id },\n        ...where,\n      },\n      skip: (pageNum - 1) * pageSize,\n      take: pageSize,\n    });\n\n    return {\n      pageNum,\n      pageSize,\n      total,\n      list,\n    };\n  }\n\n  async handleCancelAllocated(id: string, dto: DelDTO) {\n    const { ids: userIds } = dto;\n\n    const role = await this.roleModel.findOne({\n      relations: { users: true },\n      where: { id },\n    });\n\n    const users = role.users.filter((v) => !userIds.includes(v.id));\n\n    await this.roleModel.update(id, { users });\n  }\n\n  async handleCreate(dto: CreateRoleDTO) {\n    const { userName } = this.contextService.getPayload();\n    const { menus, ...rest } = dto;\n\n    const roleMenus =\n      menus.length > 0\n        ? await this.menuModel.find({\n            select: { id: true },\n            where: menus.map((v) => ({ id: v })),\n          })\n        : null;\n\n    await this.roleModel.insert({\n      ...rest,\n      menus: roleMenus,\n      createBy: userName,\n    });\n  }\n\n  async handleUpdate(id: string, dto: UpdateRoleDTO) {\n    const { userName } = this.contextService.getPayload();\n\n    const role = await this.roleModel.findOne({\n      relations: { menus: true },\n      where: { id: id },\n    });\n\n    if (!role) {\n      throw new BadRequestException(MESSAGES.ROLE_NOT_EXIST);\n    }\n\n    const { menus, ...rest } = dto;\n\n    const roleMenus =\n      menus.length > 0\n        ? await this.menuModel.find({\n            select: { id: true },\n            where: menus.map((v) => ({ id: v })),\n          })\n        : null;\n\n    await this.roleModel.save({\n      ...role,\n      ...rest,\n      menus: roleMenus,\n      updateBy: userName,\n    });\n  }\n\n  async handleDeleteMany(dto: DelDTO) {\n    const { ids } = dto;\n\n    const list = await this.roleModel.find({\n      relations: { menus: true },\n      where: { id: In(ids) },\n    });\n\n    for (const role of list) {\n      await this.roleModel.update(role.id, {\n        delFlag: ENTITY_DEL_FLAG.DELETE,\n        menus: [],\n      });\n    }\n  }\n\n  async handleExportPage(dto: FindRolePageDTO) {\n    const { list } = await this.handleFindPage(dto);\n\n    return await this.excelService.handleExport({\n      sheetName: '角色',\n      fileName: '角色报表',\n      Cls: RoleExportSerialize,\n      data: list,\n    });\n  }\n\n  async handleToggleStatus(id: string) {\n    const role = await this.roleModel.findOneBy({ id });\n\n    if (!role) {\n      throw new BadRequestException(MESSAGES.ROLE_NOT_EXIST);\n    }\n\n    role.status =\n      role.status === ENTITY_STATUS.NORMAL\n        ? ENTITY_STATUS.DISABLE\n        : ENTITY_STATUS.NORMAL;\n\n    await this.roleModel.save(role);\n  }\n\n  async handleFindUnallocatedPage(id: string, dto: FindUnallocatedPageDTO) {\n    const { pageNum, pageSize, ...where } = dto;\n\n    const allocatedUsers = await this.userModel.find({\n      where: { roles: { id: id } },\n      select: { id: true },\n    });\n    const allocatedUserIds = allocatedUsers.map((v) => v.id);\n\n    const [list, total] = await this.userModel.findAndCount({\n      where: {\n        id: Not(In(allocatedUserIds)),\n        ...where,\n      },\n      skip: (pageNum - 1) * pageSize,\n      take: pageSize,\n    });\n\n    return {\n      pageNum,\n      pageSize,\n      total,\n      list,\n    };\n  }\n\n  async handleAllocate(id: string, dto: AllocateDTO) {\n    const { ids } = dto;\n\n    const role = await this.roleModel.findOne({\n      relations: { users: true },\n      where: { id },\n    });\n\n    const oldUsers = role.users || [];\n    const oldUserIds = oldUsers.map((v) => v.id);\n    const newUserIds = ids.filter((v) => !oldUserIds.includes(v));\n    const newUsers = await this.userModel.findBy({ id: In(newUserIds) });\n    const users = [].concat(oldUsers, newUsers);\n\n    await this.roleModel.update(id, { users });\n  }\n}\n"],"names":["RoleService","handleFindPage","dto","pageNum","pageSize","beginDate","endDate","where","list","total","roleModel","findAndCount","relations","menus","select","id","delFlag","ENTITY_DEL_FLAG","EXIST","createTime","Between","order","roleSort","take","skip","handleFindAllocatedPage","userModel","roles","handleCancelAllocated","ids","userIds","role","findOne","users","filter","v","includes","update","handleCreate","userName","contextService","getPayload","rest","roleMenus","length","menuModel","find","map","insert","createBy","handleUpdate","BadRequestException","MESSAGES","ROLE_NOT_EXIST","save","updateBy","handleDeleteMany","In","DELETE","handleExportPage","excelService","handleExport","sheetName","fileName","Cls","RoleExportSerialize","data","handleToggleStatus","findOneBy","status","ENTITY_STATUS","NORMAL","DISABLE","handleFindUnallocatedPage","allocatedUsers","allocatedUserIds","Not","handleAllocate","oldUsers","oldUserIds","newUserIds","newUsers","findBy","concat","constructor","Injectable","Inject","EXCEL_SERVICE","InjectRepository","SysMenuEntity","SysRoleEntity","SysUserEntity"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqBaA;;;eAAAA;;;wBArB2C;yBACvB;uBACW;0BACC;2BAEY;0BACG;wBAE7B;+BAUK;;;;;;;;;;;;;;;AAG7B,IAAA,AAAMA,cAAN,MAAMA;IAaX,MAAMC,eAAeC,GAAoB,EAAE;QACzC,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE,GAAGC,OAAO,GAAGL;QAE5D,MAAM,CAACM,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,SAAS,CAACC,YAAY,CAAC;YACtDC,WAAW;gBACTC,OAAO;YACT;YACAC,QAAQ;gBACND,OAAO;oBACLE,IAAI;gBACN;YACF;YACAR,OAAO;gBACLS,SAASC,0BAAe,CAACC,KAAK;gBAC9BC,YAAYd,YAAYe,IAAAA,iBAAO,EAACf,WAAWC,WAAW;gBACtD,GAAGC,KAAK;YACV;YACAc,OAAO;gBACLC,UAAU;YACZ;YACAC,MAAMnB;YACNoB,MAAM,AAACrB,CAAAA,UAAU,CAAA,IAAKC;QACxB;QAEA,OAAO;YACLD;YACAC;YACAK;YACAD;QACF;IACF;IAEA,MAAMiB,wBAAwBV,EAAU,EAAEb,GAAyB,EAAE;QACnE,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE,GAAGG,OAAO,GAAGL;QAExC,MAAM,CAACM,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACiB,SAAS,CAACf,YAAY,CAAC;YACtDC,WAAW;gBAAEe,OAAO;YAAK;YACzBpB,OAAO;gBACLoB,OAAO;oBAAEZ,IAAIA;gBAAG;gBAChB,GAAGR,KAAK;YACV;YACAiB,MAAM,AAACrB,CAAAA,UAAU,CAAA,IAAKC;YACtBmB,MAAMnB;QACR;QAEA,OAAO;YACLD;YACAC;YACAK;YACAD;QACF;IACF;IAEA,MAAMoB,sBAAsBb,EAAU,EAAEb,GAAW,EAAE;QACnD,MAAM,EAAE2B,KAAKC,OAAO,EAAE,GAAG5B;QAEzB,MAAM6B,OAAO,MAAM,IAAI,CAACrB,SAAS,CAACsB,OAAO,CAAC;YACxCpB,WAAW;gBAAEqB,OAAO;YAAK;YACzB1B,OAAO;gBAAEQ;YAAG;QACd;QAEA,MAAMkB,QAAQF,KAAKE,KAAK,CAACC,MAAM,CAAC,CAACC,IAAM,CAACL,QAAQM,QAAQ,CAACD,EAAEpB,EAAE;QAE7D,MAAM,IAAI,CAACL,SAAS,CAAC2B,MAAM,CAACtB,IAAI;YAAEkB;QAAM;IAC1C;IAEA,MAAMK,aAAapC,GAAkB,EAAE;QACrC,MAAM,EAAEqC,QAAQ,EAAE,GAAG,IAAI,CAACC,cAAc,CAACC,UAAU;QACnD,MAAM,EAAE5B,KAAK,EAAE,GAAG6B,MAAM,GAAGxC;QAE3B,MAAMyC,YACJ9B,MAAM+B,MAAM,GAAG,IACX,MAAM,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC;YACxBhC,QAAQ;gBAAEC,IAAI;YAAK;YACnBR,OAAOM,MAAMkC,GAAG,CAAC,CAACZ,IAAO,CAAA;oBAAEpB,IAAIoB;gBAAE,CAAA;QACnC,KACA;QAEN,MAAM,IAAI,CAACzB,SAAS,CAACsC,MAAM,CAAC;YAC1B,GAAGN,IAAI;YACP7B,OAAO8B;YACPM,UAAUV;QACZ;IACF;IAEA,MAAMW,aAAanC,EAAU,EAAEb,GAAkB,EAAE;QACjD,MAAM,EAAEqC,QAAQ,EAAE,GAAG,IAAI,CAACC,cAAc,CAACC,UAAU;QAEnD,MAAMV,OAAO,MAAM,IAAI,CAACrB,SAAS,CAACsB,OAAO,CAAC;YACxCpB,WAAW;gBAAEC,OAAO;YAAK;YACzBN,OAAO;gBAAEQ,IAAIA;YAAG;QAClB;QAEA,IAAI,CAACgB,MAAM;YACT,MAAM,IAAIoB,2BAAmB,CAACC,mBAAQ,CAACC,cAAc;QACvD;QAEA,MAAM,EAAExC,KAAK,EAAE,GAAG6B,MAAM,GAAGxC;QAE3B,MAAMyC,YACJ9B,MAAM+B,MAAM,GAAG,IACX,MAAM,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC;YACxBhC,QAAQ;gBAAEC,IAAI;YAAK;YACnBR,OAAOM,MAAMkC,GAAG,CAAC,CAACZ,IAAO,CAAA;oBAAEpB,IAAIoB;gBAAE,CAAA;QACnC,KACA;QAEN,MAAM,IAAI,CAACzB,SAAS,CAAC4C,IAAI,CAAC;YACxB,GAAGvB,IAAI;YACP,GAAGW,IAAI;YACP7B,OAAO8B;YACPY,UAAUhB;QACZ;IACF;IAEA,MAAMiB,iBAAiBtD,GAAW,EAAE;QAClC,MAAM,EAAE2B,GAAG,EAAE,GAAG3B;QAEhB,MAAMM,OAAO,MAAM,IAAI,CAACE,SAAS,CAACoC,IAAI,CAAC;YACrClC,WAAW;gBAAEC,OAAO;YAAK;YACzBN,OAAO;gBAAEQ,IAAI0C,IAAAA,YAAE,EAAC5B;YAAK;QACvB;QAEA,KAAK,MAAME,QAAQvB,KAAM;YACvB,MAAM,IAAI,CAACE,SAAS,CAAC2B,MAAM,CAACN,KAAKhB,EAAE,EAAE;gBACnCC,SAASC,0BAAe,CAACyC,MAAM;gBAC/B7C,OAAO,EAAE;YACX;QACF;IACF;IAEA,MAAM8C,iBAAiBzD,GAAoB,EAAE;QAC3C,MAAM,EAAEM,IAAI,EAAE,GAAG,MAAM,IAAI,CAACP,cAAc,CAACC;QAE3C,OAAO,MAAM,IAAI,CAAC0D,YAAY,CAACC,YAAY,CAAC;YAC1CC,WAAW;YACXC,UAAU;YACVC,KAAKC,kCAAmB;YACxBC,MAAM1D;QACR;IACF;IAEA,MAAM2D,mBAAmBpD,EAAU,EAAE;QACnC,MAAMgB,OAAO,MAAM,IAAI,CAACrB,SAAS,CAAC0D,SAAS,CAAC;YAAErD;QAAG;QAEjD,IAAI,CAACgB,MAAM;YACT,MAAM,IAAIoB,2BAAmB,CAACC,mBAAQ,CAACC,cAAc;QACvD;QAEAtB,KAAKsC,MAAM,GACTtC,KAAKsC,MAAM,KAAKC,wBAAa,CAACC,MAAM,GAChCD,wBAAa,CAACE,OAAO,GACrBF,wBAAa,CAACC,MAAM;QAE1B,MAAM,IAAI,CAAC7D,SAAS,CAAC4C,IAAI,CAACvB;IAC5B;IAEA,MAAM0C,0BAA0B1D,EAAU,EAAEb,GAA2B,EAAE;QACvE,MAAM,EAAEC,OAAO,EAAEC,QAAQ,EAAE,GAAGG,OAAO,GAAGL;QAExC,MAAMwE,iBAAiB,MAAM,IAAI,CAAChD,SAAS,CAACoB,IAAI,CAAC;YAC/CvC,OAAO;gBAAEoB,OAAO;oBAAEZ,IAAIA;gBAAG;YAAE;YAC3BD,QAAQ;gBAAEC,IAAI;YAAK;QACrB;QACA,MAAM4D,mBAAmBD,eAAe3B,GAAG,CAAC,CAACZ,IAAMA,EAAEpB,EAAE;QAEvD,MAAM,CAACP,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACiB,SAAS,CAACf,YAAY,CAAC;YACtDJ,OAAO;gBACLQ,IAAI6D,IAAAA,aAAG,EAACnB,IAAAA,YAAE,EAACkB;gBACX,GAAGpE,KAAK;YACV;YACAiB,MAAM,AAACrB,CAAAA,UAAU,CAAA,IAAKC;YACtBmB,MAAMnB;QACR;QAEA,OAAO;YACLD;YACAC;YACAK;YACAD;QACF;IACF;IAEA,MAAMqE,eAAe9D,EAAU,EAAEb,GAAgB,EAAE;QACjD,MAAM,EAAE2B,GAAG,EAAE,GAAG3B;QAEhB,MAAM6B,OAAO,MAAM,IAAI,CAACrB,SAAS,CAACsB,OAAO,CAAC;YACxCpB,WAAW;gBAAEqB,OAAO;YAAK;YACzB1B,OAAO;gBAAEQ;YAAG;QACd;QAEA,MAAM+D,WAAW/C,KAAKE,KAAK,IAAI,EAAE;QACjC,MAAM8C,aAAaD,SAAS/B,GAAG,CAAC,CAACZ,IAAMA,EAAEpB,EAAE;QAC3C,MAAMiE,aAAanD,IAAIK,MAAM,CAAC,CAACC,IAAM,CAAC4C,WAAW3C,QAAQ,CAACD;QAC1D,MAAM8C,WAAW,MAAM,IAAI,CAACvD,SAAS,CAACwD,MAAM,CAAC;YAAEnE,IAAI0C,IAAAA,YAAE,EAACuB;QAAY;QAClE,MAAM/C,QAAQ,EAAE,CAACkD,MAAM,CAACL,UAAUG;QAElC,MAAM,IAAI,CAACvE,SAAS,CAAC2B,MAAM,CAACtB,IAAI;YAAEkB;QAAM;IAC1C;IAlNAmD,YACE,AACQxB,YAA0B,EAClC,AACQf,SAAoC,EAC5C,AACQnC,SAAoC,EAC5C,AACQgB,SAAoC,EAC5C,AAAQc,cAA8B,CACtC;aARQoB,eAAAA;aAEAf,YAAAA;aAEAnC,YAAAA;aAEAgB,YAAAA;aACAc,iBAAAA;IACP;AAyML;AApNaxC;IADZqF,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,cAAM,EAACC,oBAAa;IAEpBC,aAAAA,IAAAA,yBAAgB,EAACC,uBAAa;IAE9BD,aAAAA,IAAAA,yBAAgB,EAACE,uBAAa;IAE9BF,aAAAA,IAAAA,yBAAgB,EAACG,uBAAa;;;eALT,mBAAY,4BAAZ,mBAAY;eAEf,oBAAU,4BAAV,oBAAU;eAEV,oBAAU,4BAAV,oBAAU;eAEV,oBAAU,4BAAV,oBAAU;eACL,sBAAc,4BAAd,sBAAc;;GAV7B3F"}