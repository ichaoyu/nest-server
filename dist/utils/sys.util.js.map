{"version":3,"sources":["../../src/utils/sys.util.ts"],"sourcesContent":["import { BadRequestException } from '@nestjs/common';\nimport { AxiosError } from 'axios';\nimport { isEmpty } from 'lodash-unified';\nimport { Systeminformation } from 'systeminformation';\nimport UAParser from 'ua-parser-js';\n\nimport { EXTRAS } from '@/constants';\n\nimport { HttpUtil } from './http.util';\nimport { ProxyUtil } from './proxy.util';\n\n/**\n * 系统工具\n */\nexport const SysUtil = {\n  /**\n   * 是否是执行测试\n   */\n  isTesting: process.env.NODE_ENV === 'testing',\n  /**\n   * 是否是执行开发\n   */\n  isDevelopment: process.env.NODE_ENV === 'development',\n  /**\n   * 是否是执行生产\n   */\n  isProduction: process.env.NODE_ENV === 'production',\n  /**\n   * 本地IP V4\n   */\n  localIP4: async () => {\n    const network = await getDefaultNetwork();\n\n    return network.ip4;\n  },\n  /**\n   * 本地IP V6\n   * @returns\n   */\n  localIP6: async () => {\n    const network = await getDefaultNetwork();\n\n    return network.ip6;\n  },\n  /**\n   * 是否是本地IP\n   * @param {string} ip IP地址\n   */\n  isLocalIP: async (ip: string) => {\n    const internalIP = await SysUtil.localIP4();\n\n    if (ip.includes(internalIP) || ip.includes(EXTRAS.LOCAL_IP)) {\n      return true;\n    }\n    return false;\n  },\n  /**\n   * 解析IP地址\n   * @param {string} ip IP地址\n   */\n  parseIP: async (ip: string) => {\n    if (ip === null) {\n      return EXTRAS.DEFAULT_IP;\n    }\n\n    const isLocalIP = await SysUtil.isLocalIP(ip);\n\n    return isLocalIP ? EXTRAS.LOCAL_IP : ip;\n  },\n  /**\n   * 解析用户代理字符串\n   * @param {string} ua 用户代理字符串\n   */\n  parseUA: (ua: string) => {\n    const uaParser = new UAParser(ua, {\n      browser: [\n        [/(apifox)\\/([\\w\\.]+)/i],\n        [UAParser.BROWSER.NAME, UAParser.BROWSER.VERSION],\n      ],\n    });\n\n    return uaParser.getResult();\n  },\n  /**\n   * 解析地址\n   * @param {string} ip IP地址\n   */\n  parseAddress: async (ip: string) => {\n    const isLocalIP = await SysUtil.isLocalIP(ip);\n\n    if (isLocalIP) {\n      return EXTRAS.LOCAL_IP_TEXT;\n    }\n\n    const { data } = await HttpUtil.client\n      .get(`${EXTRAS.ADDR_URL}`, {\n        params: { ip },\n      })\n      .catch((error: AxiosError) => {\n        throw new BadRequestException(error.response.data);\n      });\n\n    if (isEmpty(data.data.address)) {\n      return EXTRAS.DEFAULT_ADDR;\n    }\n\n    const [country, province, city, operation] = data.data.address\n      .split(' ')\n      .filter((v) => v !== '');\n\n    return `${province} ${city}`;\n  },\n};\n\n/**\n * 获取默认网路信息\n */\nasync function getDefaultNetwork(): Promise<Systeminformation.NetworkInterfacesData> {\n  // @ts-ignore\n  return await ProxyUtil.si.networkInterfaces('default');\n}\n"],"names":["SysUtil","isTesting","process","env","NODE_ENV","isDevelopment","isProduction","localIP4","network","getDefaultNetwork","ip4","localIP6","ip6","isLocalIP","ip","internalIP","includes","EXTRAS","LOCAL_IP","parseIP","DEFAULT_IP","parseUA","ua","uaParser","UAParser","browser","BROWSER","NAME","VERSION","getResult","parseAddress","LOCAL_IP_TEXT","data","HttpUtil","client","get","ADDR_URL","params","catch","error","BadRequestException","response","isEmpty","address","DEFAULT_ADDR","country","province","city","operation","split","filter","v","ProxyUtil","si","networkInterfaces"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAcaA;;;eAAAA;;;wBAduB;+BAEZ;mEAEH;2BAEE;0BAEE;2BACC;;;;;;AAKnB,MAAMA,UAAU;IACrB;;GAEC,GACDC,WAAWC,QAAQC,GAAG,CAACC,QAAQ,KAAK;IACpC;;GAEC,GACDC,eAAeH,QAAQC,GAAG,CAACC,QAAQ,KAAK;IACxC;;GAEC,GACDE,cAAcJ,QAAQC,GAAG,CAACC,QAAQ,KAAK;IACvC;;GAEC,GACDG,UAAU;QACR,MAAMC,UAAU,MAAMC;QAEtB,OAAOD,QAAQE,GAAG;IACpB;IACA;;;GAGC,GACDC,UAAU;QACR,MAAMH,UAAU,MAAMC;QAEtB,OAAOD,QAAQI,GAAG;IACpB;IACA;;;GAGC,GACDC,WAAW,OAAOC;QAChB,MAAMC,aAAa,MAAMf,QAAQO,QAAQ;QAEzC,IAAIO,GAAGE,QAAQ,CAACD,eAAeD,GAAGE,QAAQ,CAACC,iBAAM,CAACC,QAAQ,GAAG;YAC3D,OAAO;QACT;QACA,OAAO;IACT;IACA;;;GAGC,GACDC,SAAS,OAAOL;QACd,IAAIA,OAAO,MAAM;YACf,OAAOG,iBAAM,CAACG,UAAU;QAC1B;QAEA,MAAMP,YAAY,MAAMb,QAAQa,SAAS,CAACC;QAE1C,OAAOD,YAAYI,iBAAM,CAACC,QAAQ,GAAGJ;IACvC;IACA;;;GAGC,GACDO,SAAS,CAACC;QACR,MAAMC,WAAW,IAAIC,mBAAQ,CAACF,IAAI;YAChCG,SAAS;gBACP;oBAAC;iBAAuB;gBACxB;oBAACD,mBAAQ,CAACE,OAAO,CAACC,IAAI;oBAAEH,mBAAQ,CAACE,OAAO,CAACE,OAAO;iBAAC;aAClD;QACH;QAEA,OAAOL,SAASM,SAAS;IAC3B;IACA;;;GAGC,GACDC,cAAc,OAAOhB;QACnB,MAAMD,YAAY,MAAMb,QAAQa,SAAS,CAACC;QAE1C,IAAID,WAAW;YACb,OAAOI,iBAAM,CAACc,aAAa;QAC7B;QAEA,MAAM,EAAEC,IAAI,EAAE,GAAG,MAAMC,kBAAQ,CAACC,MAAM,CACnCC,GAAG,CAAC,CAAC,EAAElB,iBAAM,CAACmB,QAAQ,CAAC,CAAC,EAAE;YACzBC,QAAQ;gBAAEvB;YAAG;QACf,GACCwB,KAAK,CAAC,CAACC;YACN,MAAM,IAAIC,2BAAmB,CAACD,MAAME,QAAQ,CAACT,IAAI;QACnD;QAEF,IAAIU,IAAAA,sBAAO,EAACV,KAAKA,IAAI,CAACW,OAAO,GAAG;YAC9B,OAAO1B,iBAAM,CAAC2B,YAAY;QAC5B;QAEA,MAAM,CAACC,SAASC,UAAUC,MAAMC,UAAU,GAAGhB,KAAKA,IAAI,CAACW,OAAO,CAC3DM,KAAK,CAAC,KACNC,MAAM,CAAC,CAACC,IAAMA,MAAM;QAEvB,OAAO,CAAC,EAAEL,SAAS,CAAC,EAAEC,KAAK,CAAC;IAC9B;AACF;AAEA;;CAEC,GACD,eAAetC;IACb,aAAa;IACb,OAAO,MAAM2C,oBAAS,CAACC,EAAE,CAACC,iBAAiB,CAAC;AAC9C"}