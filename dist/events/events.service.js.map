{"version":3,"sources":["../../src/events/events.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@nestjs/common';\nimport { RedisClient } from '@/interfaces';\n\nimport { REDIS_CLIENT } from '@/constants';\nimport { ProxyUtil, SysUtil } from '@/utils';\n\n@Injectable()\nexport class EventsService {\n  constructor(\n    @Inject(REDIS_CLIENT)\n    private redisClient: RedisClient,\n  ) {}\n\n  async handleGetInfo() {\n    //#region CPU\n\n    const { currentLoadUser, currentLoadSystem, currentLoadIdle } =\n      await ProxyUtil.si.currentLoad();\n    const { cores } = await ProxyUtil.si.cpu();\n\n    const cpuInfo = [\n      { key: '核心数', value: cores },\n      { key: '用户使用率', value: currentLoadUser.toPrecision(2) },\n      { key: '系统使用率', value: currentLoadSystem.toPrecision(2) },\n      { key: '当前空闲率', value: currentLoadIdle.toPrecision(2) },\n    ];\n\n    //#endregion\n\n    //#region Memory\n\n    const { total, free, used } = await ProxyUtil.si.mem();\n\n    const sysMemoryInfo = {\n      total,\n      used,\n      free,\n      rate: (1 - free / total).toPrecision(2),\n    };\n\n    const { heapTotal, heapUsed } = process.memoryUsage();\n\n    const nodeMemoryInfo = {\n      total: heapTotal,\n      used: heapUsed,\n      free: heapTotal - heapUsed,\n      rate: (1 - heapUsed / heapTotal).toPrecision(2),\n    };\n\n    const memInfo = [\n      {\n        key: '总内存',\n        sys: sysMemoryInfo.total,\n        node: nodeMemoryInfo.total,\n      },\n      {\n        key: '已用内存',\n        sys: sysMemoryInfo.used,\n        node: nodeMemoryInfo.used,\n      },\n      {\n        key: '剩余内存',\n        sys: sysMemoryInfo.free,\n        node: nodeMemoryInfo.free,\n      },\n      {\n        key: '使用率',\n        sys: sysMemoryInfo.rate,\n        node: nodeMemoryInfo.rate,\n      },\n    ];\n\n    //#endregion\n\n    //#region OS\n\n    const osInfoBase = await ProxyUtil.si.osInfo();\n    const ip = await SysUtil.localIP4();\n\n    const osInfo = { ...osInfoBase, ip };\n\n    //#endregion\n\n    //#region Disk\n    const diskInfo = await ProxyUtil.si.fsSize();\n\n    //#endregion\n\n    //#region Node\n\n    const version = process.version;\n    const nodePath = process.argv[0];\n    const filePath = process.argv[1];\n    const args = process.argv.splice(2);\n    const uptime = process.uptime();\n\n    const nodeInfo = {\n      version,\n      nodePath,\n      filePath,\n      args,\n      uptime,\n    };\n\n    //#endregion\n\n    //#region\n\n    const rawInfo = await this.redisClient.info();\n    const db_size = await this.redisClient.dbsize();\n    const parsedInfo = ProxyUtil.getProperties(rawInfo);\n\n    const redisInfo = { db_size, ...parsedInfo };\n\n    //#endregion\n\n    return {\n      cpu: cpuInfo,\n      mem: memInfo,\n      os: osInfo,\n      disk: diskInfo,\n      node: nodeInfo,\n      redis: redisInfo,\n    };\n  }\n}\n"],"names":["EventsService","handleGetInfo","currentLoadUser","currentLoadSystem","currentLoadIdle","ProxyUtil","si","currentLoad","cores","cpu","cpuInfo","key","value","toPrecision","total","free","used","mem","sysMemoryInfo","rate","heapTotal","heapUsed","process","memoryUsage","nodeMemoryInfo","memInfo","sys","node","osInfoBase","osInfo","ip","SysUtil","localIP4","diskInfo","fsSize","version","nodePath","argv","filePath","args","splice","uptime","nodeInfo","rawInfo","redisClient","info","db_size","dbsize","parsedInfo","getProperties","redisInfo","os","disk","redis","constructor","Injectable","Inject","REDIS_CLIENT"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}