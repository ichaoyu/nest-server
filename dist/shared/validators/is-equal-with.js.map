{"version":3,"sources":["../../../src/shared/validators/is-equal-with.ts"],"sourcesContent":["import {\n  ValidationOptions,\n  buildMessage,\n  equals,\n  registerDecorator,\n} from 'class-validator';\n\n/**\n * DTO 兄弟属性相等比较\n */\nexport function IsEqualWith(\n  property: string,\n  validationOptions?: ValidationOptions,\n) {\n  return (object: unknown, propertyName: string) => {\n    registerDecorator({\n      name: 'IsEqualWith',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [property],\n      options: validationOptions,\n      validator: {\n        validate(value, args) {\n          const [relatedPropertyName] = args.constraints;\n          const relatedValue = (args.object as any)[relatedPropertyName];\n\n          return equals(value, relatedValue);\n        },\n        defaultMessage: buildMessage(\n          (eachPrefix) =>\n            `${eachPrefix}$property should equal with $constraint1`,\n          validationOptions,\n        ),\n      },\n    });\n  };\n}\n"],"names":["IsEqualWith","property","validationOptions","object","propertyName","registerDecorator","name","target","constructor","constraints","options","validator","validate","value","args","relatedPropertyName","relatedValue","equals","defaultMessage","buildMessage","eachPrefix"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAUgBA;;;eAAAA;;;gCALT;AAKA,SAASA,YACdC,QAAgB,EAChBC,iBAAqC;IAErC,OAAO,CAACC,QAAiBC;QACvBC,IAAAA,iCAAiB,EAAC;YAChBC,MAAM;YACNC,QAAQJ,OAAOK,WAAW;YAC1BJ,cAAcA;YACdK,aAAa;gBAACR;aAAS;YACvBS,SAASR;YACTS,WAAW;gBACTC,UAASC,KAAK,EAAEC,IAAI;oBAClB,MAAM,CAACC,oBAAoB,GAAGD,KAAKL,WAAW;oBAC9C,MAAMO,eAAe,AAACF,KAAKX,MAAM,AAAQ,CAACY,oBAAoB;oBAE9D,OAAOE,IAAAA,sBAAM,EAACJ,OAAOG;gBACvB;gBACAE,gBAAgBC,IAAAA,4BAAY,EAC1B,CAACC,aACC,CAAC,EAAEA,WAAW,wCAAwC,CAAC,EACzDlB;YAEJ;QACF;IACF;AACF"}