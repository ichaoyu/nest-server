{"version":3,"sources":["../../src/shared/shared.service.ts"],"sourcesContent":["import { HttpStatus, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { WsException } from '@nestjs/websockets';\nimport { Repository } from 'typeorm';\n\nimport { EXTRAS, MESSAGES } from '@/constants';\nimport {\n  SysConfigEntity,\n  SysLoginLogEntity,\n  SysOperLogEntity,\n  SysUserEntity,\n} from '@/database';\nimport { IPayload, IPlatform } from '@/interfaces';\n\n/**\n * 共享服务\n */\n@Injectable()\nexport class SharedService {\n  constructor(\n    @InjectRepository(SysUserEntity)\n    private userModel: Repository<SysUserEntity>,\n    @InjectRepository(SysLoginLogEntity)\n    private loginLogModel: Repository<SysLoginLogEntity>,\n    @InjectRepository(SysOperLogEntity)\n    private operLogModel: Repository<SysOperLogEntity>,\n    @InjectRepository(SysConfigEntity)\n    private configModel: Repository<SysConfigEntity>,\n  ) {}\n\n  /**\n   * 保存登录日志\n   * @param {SysLoginLogEntity} data 登录日志数据\n   */\n  async setLoginLog(data: SysLoginLogEntity) {\n    await this.loginLogModel.insert(data);\n  }\n\n  /**\n   * 保存操作日志\n   * @param {SysOperLogEntity} data 操作日志数据\n   */\n  async setOperLog(data: SysOperLogEntity) {\n    await this.operLogModel.insert(data);\n  }\n\n  /**\n   * 单客户端登录判断\n   */\n  async isSoloLogin() {\n    const config = await this.configModel.findOneBy({\n      configKey: 'sys.base.soloLogin',\n    });\n\n    return config.configValue === '0';\n  }\n\n  /**\n   * 获取用户部门\n   * @param {string} userName 用户名\n   */\n  async getUserWithDeptByName(userName: string) {\n    return await this.userModel.findOne({\n      relations: { dept: true },\n      where: { userName },\n    });\n  }\n\n  /**\n   * 从 JWT 载荷获取用户带部门和角色\n   * @param {IPayload} payload JWT 载荷\n   * @param {IPlatform} platform 平台\n   */\n  async getUserWithDeptRolesByPayload(\n    payload: IPayload,\n    platform: IPlatform = 'http',\n  ) {\n    const user = await this.userModel.findOne({\n      relations: {\n        dept: true,\n        roles: {\n          menus: true,\n        },\n      },\n      where: { id: payload.userId, userName: payload.userName },\n    });\n\n    if (!user) {\n      throw platform === 'http'\n        ? new UnauthorizedException(MESSAGES.AUTHORIZATION_NOT_VALID)\n        : new WsException({\n            status: HttpStatus.UNAUTHORIZED,\n            message: MESSAGES.AUTHORIZATION_NOT_VALID,\n          });\n    }\n\n    return user;\n  }\n\n  /**\n   * 获取用户带权限\n   * @param {SysUserEntity} data 用户\n   */\n  getUserWithPermission(data: SysUserEntity) {\n    const { roles, ...rest } = data;\n\n    const user = {\n      permissions: [] as string[],\n      user: rest,\n    };\n\n    if (roles?.length) {\n      if (rest.id === '1') {\n        // 主账号拥有全部权限\n        user.permissions = [EXTRAS.ADMIN_PERMISSION];\n      } else {\n        const permissions = new Set<string>();\n\n        for (const role of roles) {\n          if (role.menus?.length) {\n            for (const menu of role.menus) {\n              permissions.add(menu.perms);\n            }\n          }\n        }\n\n        user.permissions = Array.from(permissions);\n      }\n    }\n\n    return {\n      ...user,\n      roles,\n    };\n  }\n}\n"],"names":["SharedService","setLoginLog","data","loginLogModel","insert","setOperLog","operLogModel","isSoloLogin","config","configModel","findOneBy","configKey","configValue","getUserWithDeptByName","userName","userModel","findOne","relations","dept","where","getUserWithDeptRolesByPayload","payload","platform","user","roles","menus","id","userId","UnauthorizedException","MESSAGES","AUTHORIZATION_NOT_VALID","WsException","status","HttpStatus","UNAUTHORIZED","message","getUserWithPermission","rest","permissions","length","EXTRAS","ADMIN_PERMISSION","Set","role","menu","add","perms","Array","from","constructor","Injectable","InjectRepository","SysUserEntity","SysLoginLogEntity","SysOperLogEntity","SysConfigEntity"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAkBaA;;;eAAAA;;;wBAlBiD;yBAC7B;4BACL;0BACD;2BAEM;0BAM1B;;;;;;;;;;;;;;;AAOA,IAAA,AAAMA,gBAAN,MAAMA;IAYX;;;GAGC,GACD,MAAMC,YAAYC,IAAuB,EAAE;QACzC,MAAM,IAAI,CAACC,aAAa,CAACC,MAAM,CAACF;IAClC;IAEA;;;GAGC,GACD,MAAMG,WAAWH,IAAsB,EAAE;QACvC,MAAM,IAAI,CAACI,YAAY,CAACF,MAAM,CAACF;IACjC;IAEA;;GAEC,GACD,MAAMK,cAAc;QAClB,MAAMC,SAAS,MAAM,IAAI,CAACC,WAAW,CAACC,SAAS,CAAC;YAC9CC,WAAW;QACb;QAEA,OAAOH,OAAOI,WAAW,KAAK;IAChC;IAEA;;;GAGC,GACD,MAAMC,sBAAsBC,QAAgB,EAAE;QAC5C,OAAO,MAAM,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC;YAClCC,WAAW;gBAAEC,MAAM;YAAK;YACxBC,OAAO;gBAAEL;YAAS;QACpB;IACF;IAEA;;;;GAIC,GACD,MAAMM,8BACJC,OAAiB,EACjBC,WAAsB,MAAM,EAC5B;QACA,MAAMC,OAAO,MAAM,IAAI,CAACR,SAAS,CAACC,OAAO,CAAC;YACxCC,WAAW;gBACTC,MAAM;gBACNM,OAAO;oBACLC,OAAO;gBACT;YACF;YACAN,OAAO;gBAAEO,IAAIL,QAAQM,MAAM;gBAAEb,UAAUO,QAAQP,QAAQ;YAAC;QAC1D;QAEA,IAAI,CAACS,MAAM;YACT,MAAMD,aAAa,SACf,IAAIM,6BAAqB,CAACC,mBAAQ,CAACC,uBAAuB,IAC1D,IAAIC,uBAAW,CAAC;gBACdC,QAAQC,kBAAU,CAACC,YAAY;gBAC/BC,SAASN,mBAAQ,CAACC,uBAAuB;YAC3C;QACN;QAEA,OAAOP;IACT;IAEA;;;GAGC,GACDa,sBAAsBlC,IAAmB,EAAE;QACzC,MAAM,EAAEsB,KAAK,EAAE,GAAGa,MAAM,GAAGnC;QAE3B,MAAMqB,OAAO;YACXe,aAAa,EAAE;YACff,MAAMc;QACR;QAEA,IAAIb,OAAOe,QAAQ;YACjB,IAAIF,KAAKX,EAAE,KAAK,KAAK;gBACnB,YAAY;gBACZH,KAAKe,WAAW,GAAG;oBAACE,iBAAM,CAACC,gBAAgB;iBAAC;YAC9C,OAAO;gBACL,MAAMH,cAAc,IAAII;gBAExB,KAAK,MAAMC,QAAQnB,MAAO;oBACxB,IAAImB,KAAKlB,KAAK,EAAEc,QAAQ;wBACtB,KAAK,MAAMK,QAAQD,KAAKlB,KAAK,CAAE;4BAC7Ba,YAAYO,GAAG,CAACD,KAAKE,KAAK;wBAC5B;oBACF;gBACF;gBAEAvB,KAAKe,WAAW,GAAGS,MAAMC,IAAI,CAACV;YAChC;QACF;QAEA,OAAO;YACL,GAAGf,IAAI;YACPC;QACF;IACF;IAnHAyB,YACE,AACQlC,SAAoC,EAC5C,AACQZ,aAA4C,EACpD,AACQG,YAA0C,EAClD,AACQG,WAAwC,CAChD;aAPQM,YAAAA;aAEAZ,gBAAAA;aAEAG,eAAAA;aAEAG,cAAAA;IACP;AA2GL;AArHaT;IADZkD,IAAAA,kBAAU;IAGNC,aAAAA,IAAAA,yBAAgB,EAACC,uBAAa;IAE9BD,aAAAA,IAAAA,yBAAgB,EAACE,2BAAiB;IAElCF,aAAAA,IAAAA,yBAAgB,EAACG,0BAAgB;IAEjCH,aAAAA,IAAAA,yBAAgB,EAACI,yBAAe;;;eALd,oBAAU,4BAAV,oBAAU;eAEN,oBAAU,4BAAV,oBAAU;eAEX,oBAAU,4BAAV,oBAAU;eAEX,oBAAU,4BAAV,oBAAU;;GATtBvD"}